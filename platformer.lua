-- title:  testing
-- author: desttinghim
-- desc:   trying out tic80
-- script: lua

local tiny = require "tiny"
local Anim = require "anim"

local drawingSystem = tiny.processingSystem()
drawingSystem.filter = tiny.requireAll(
  "transform", "sprite"
)
function drawingSystem:preProcess(dt)
    cls(0)
    map(0,0,30,17,0,0)
end
function drawingSystem:process(e, dt)
    local transparent = 0
    spr(
        e.sprite.i,
        e.transform.x - e.sprite.xoff,
        e.transform.y - e.sprite.yoff,
        transparent,
        e.sprite.scale,
        e.sprite.flip,
        e.sprite.rot,
        e.sprite.w,
        e.sprite.h
    )
end

local animSystem = tiny.processingSystem()
animSystem.filter = tiny.filter(
  "(sprite&anim)|(sprite&anim&control)"
)
function animSystem:process(e, dt)
  if e.control then
    if e.control.left then e.sprite.flip = 1 end
    if e.control.right then e.sprite.flip = 0 end
    if e.control.up then e.anim:play("jump")
    elseif e.control.down then e.anim:play("fall")
    elseif e.control.left or e.control.right then e.anim:play("walk")
    else e.anim:play("still") end
  end
  local index = e.anim:update(dt)
  if index then e.sprite.i = index end
end

local controlSystem = tiny.processingSystem()
controlSystem.filter = tiny.requireAll("control")
function controlSystem:process(e, dt)
  if e.control.controller < 4 then
    local offset = e.control.controller * 8
    -- basic controls
    e.control.up = btn(offset)
    e.control.down = btn(offset + 1)
    e.control.left = btn(offset + 2)
    e.control.right = btn(offset + 3)
    e.control.a = btn(offset + 4)
    e.control.b = btn(offset + 5)
    e.control.x = btn(offset + 6)
    e.control.y = btn(offset + 7)
  end
end

function aabb_overlap(a,b)
  return
    a.x < b.x + b.w and
    a.x + a.w > b.x and
    a.y < b.y + b.h and
    a.y + a.h > b.y
end

function aabb_distance_to(a,b)
  local dx, dy = 0, 0
  if a.x < b.x then dx = b.x - (a.x + a.w)
  elseif a.x > b.x then dx = a.x - (b.x + b.w)
  end
  if a.y < b.y then dy = b.y - (a.y + a.w)
  elseif a.y > b.y then dy = a.y - (b.y + b.w)
  end
  return dx, dy
end

-- rect should be absolutely positioned
function tilemap_collision(rect)
   local x,y = rect.x, rect.y
   local left = x // 8
   local right = (x + rect.w) // 8
   local top = y // 8
   local bot = (y + rect.h) // 8

   local collision = {}
   local any_collision = false
   for i=left,right do
     for j=top,bot do
       local t = mget(i,j)
       if fget(t,0) then
         any_collision = true
         collision[#collision+1] = {x=i,y=j}
       end
     end
   end
   if any_collision then return collision end
   return nil
end

-- Returns distance to map cell
function tilemap_distance_to(a, m)
  local dx, dy = 0, 0
  local mx, my, mw, mh = m.x * 8, m.y * 8, 8, 8
  if a.x < mx then dx = mx - (a.x + a.w)
  elseif a.x > mx then dx = a.x - (mx + mw)
  end
  if a.y < my then dy = my - (a.y + a.h)
  elseif a.y > my then dy = a.y - (my + mh)
  end
  return dx, dy
end

local physicsSystem = tiny.system()
physicsSystem.filter = tiny.filter(
  "transform&aabb&physics|control"
)
function physicsSystem:update(dt)
  for index=1,#self.entities do
    local e = self.entities[index]
    local on_ground = tilemap_collision({
      x = e.transform.x + e.aabb.x,
      y = e.transform.y + e.aabb.y + 1,
      w = e.aabb.w,
      h = e.aabb.h,
    })
    if not on_ground then
      e.physics.vel.y = math.min(e.physics.max.y, e.physics.vel.y + e.physics.gravity)
    else
      e.physics.jump_time = 0
    end

    if e.control then
      if e.control.left then
        e.physics.vel.x = math.max(-e.physics.max.x, e.physics.vel.x - e.physics.accel)
      elseif e.control.right then
        e.physics.vel.x = math.min(e.physics.max.x, e.physics.vel.x + e.physics.accel)
      else e.physics.vel.x = e.physics.vel.x * e.physics.friction
      end
      if e.control.up then
        if on_ground then e.physics.jump_time = e.physics.jump_time_max end
        if e.physics.jump_time > 0 then
          e.physics.vel.y = -e.physics.jump
          e.physics.jump_time = e.physics.jump_time - 1
        end
      end
    end
    resolveMovement(dt/2,e);
    resolveMovement(dt/2,e);
  end
end
function resolveMovement(dt,e)
    -- vs map
    local xvel, yvel = e.physics.vel.x * dt, e.physics.vel.y * dt
    local deltax = e.physics.vel.x * dt
    local deltay = e.physics.vel.y * dt
    local rect_now = {
        x=e.transform.x + e.aabb.x,
        y=e.transform.y + e.aabb.y,
        w=e.aabb.w,
        h=e.aabb.h
    }
    local rect = {
        x = rect_now.x + deltax,
        y = rect_now.y + deltay,
        w = rect_now.w,
        h = rect_now.h
    }

    local collided = tilemap_collision(rect)
    if collided then
        local shortest = {}
        for i,col in ipairs(collided) do
            local xdist, ydist = tilemap_distance_to(rect_now,col)
            local ttx = xvel ~= 0 and math.abs(xdist / xvel) or 0
            local tty = yvel ~= 0 and math.abs(ydist / yvel) or 0
            if shortest.both == nil or ttx < shortest.both or tty < shortest.both then
              shortest.x, shortest.y = ttx, tty
              shortest.both = math.min(ttx,tty)
            end
        end
        local shortestTime = 0;
        if xvel ~= 0 and yvel == 0 then
          -- x-axis only
          shortestTime = shortest.both
          deltax = shortestTime * xvel
        elseif xvel == 0 and yvel ~= 0 then
          -- y-axis only
          shortestTime = shortest.both
          deltay = shortestTime * yvel
        else
          -- both
          shortestTime = math.min(math.abs(shortest.x),math.abs(shortest.y))
          deltax = shortestTime * xvel
          deltay = shortestTime * yvel
        end
        e.physics.vel.x, e.physics.vel.y = 0, 0
    end

    e.transform.x = e.transform.x + deltax
    e.transform.y = e.transform.y + deltay
end

local player = {
    transform = {
        x = 80,
        y = 80,
    },
    sprite = {
        i = 256,
        xoff = 4,
        yoff = 4,
        w = 1,
        h = 1,
        flip = 0,
        scale = 1,
        rot = 0,
    },
    anim = Anim.new({
      still = Anim.still(256),
      walk = Anim.simple(5, {257,258,259,260}),
      jump = Anim.still(261),
      fall = Anim.still(262),
    }, "still"),
    control = {
      controller = 0,
    },
    aabb = {
      -- Relative to transform
      x = -3,
      y = -3,
      w = 5,
      h = 7,
    },
    physics = {
      vel = {x=0,y=0},
      max = {x=1,y=2.5},
      accel = 0.1,
      gravity = 0.2,
      friction = 0.8,
      on_ground = false,
      jump = 1,
      jump_time = 0,
      jump_time_max = 10,
    },
}

local world = tiny.world(drawingSystem, animSystem, controlSystem, physicsSystem, player)

function TIC()
 world:update(1)
end

-- <TILES>
-- 018:00000000000000000000000000000000000c0000000000000cc00c0ccccccccc
-- 020:0cccccccccc0000cc0000c00c0000000c0000000cc0c0000cc000000c0000000
-- 021:ccccccc00ccc0c0c0000000c00c000cc0000000c0000c00c000000cc0000000c
-- 033:0000000c000000cc000000cc0000000c0000c00c000000cc000000cc0000000c
-- 035:c0000000c00c0000cc000000c0000000c00c0000c0000000cc000000cc000000
-- 036:c0c00000c0000000cc000000cc000000c000c000c0000000cc0c000c0ccccccc
-- 037:0000000c000000cc000000cc0000c00c0c00000c0000000c0c0c0cccccccccc0
-- 050:cccccccc0c000c0c0000000000c0000000000000000000000000000000000000
-- 255:dccccccdcc2cc2cccc2cc2cccc2cc2cccc2cc2cccccccccccc2cc2ccdccccccd
-- </TILES>

-- <SPRITES>
-- 000:00000000000dd000000dd00000dddd000cdddde00cdddde000c00e0000c00e00
-- 001:00000000000dd000000dd00000dddd000cdddde0c0dddd0e000cc0000000e000
-- 002:00000000000dd000000dd0000cdddde0c0dddd0e00dddd00000ce000000ec000
-- 003:00000000000dd000000dd00000dddd000cdddde0c0dddd0e000cee00000c0000
-- 004:00000000000dd000000dd00000dddd0000cddd0000dcdd0000c00e0000c00e00
-- 005:00000000000dd000000dd0000cdddde0c0dddd0e00dddd000cc00e0000000e00
-- 006:000dd000c00dd00e0cdddde000dddd0000dddde000c000e000c0000000000000
-- </SPRITES>

-- <MAP>
-- 001:000021212121212121212121212121212121212121212121212121210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:001200000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 010:000023232323235100000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 011:000000000000215200000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:000000002152000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:000021520000000000000000000041510000000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:001200000000000000000000412300005100000000000000000000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:000023232323232323232323000000000023232323232323232323230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <WAVES>
-- 000:00000000ffffffff00000000ffffffff
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100300000000000
-- </SFX>

-- <PATTERNS>
-- 000:400018000000000000100000400018000000000000100000600018000000000000100000400018000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </PATTERNS>

-- <TRACKS>
-- 000:100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </TRACKS>

-- <FLAGS>

-- </FLAGS>

-- <PALETTE>
-- 000:1a1c2c5d275db13e53ef7d57ffcd75a7f07038b76425717929366f3b5dc941a6f673eff7f4f4f494b0c2566c86333c57
-- </PALETTE>

